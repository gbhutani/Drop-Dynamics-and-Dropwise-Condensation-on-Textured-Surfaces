// postprocessing_code_report_plots.m -- Inverse Method code
clear all;
% this code does the following tasks
% . reads ca_inv_case*
% . copies 3D evolver results from cases_folder
% . calls the tecplot macro to extract and save 3D image of drop and base
% contours and saves them
% plots the numerical midplane curve and experimental image in the same
% graph and saves
% crops all images to the right size which can be included in tables

% change these variables
case_num=15;
cnt_list_max = 17;
exp_filename='T_B_Copy of aluminum_glycerine_01_19_2007_vol_30ul_roughness';

% this file contains info on receding and advancing angles for different
% plate inclinations
filename_ca=strcat('ca_inv_case',num2str(case_num));
ca_list = dlmread(filename_ca);
for cnt_list=1:cnt_list_max
rec_angle=ca_list(cnt_list,3);
adv_angle=ca_list(cnt_list,4);
incli=ca_list(cnt_list,2);

%     READ EXPERIMENTAL DROP PROFILE
if cnt_list<10
    witfile = strcat(exp_filename,'0',num2str(cnt_list),'_points.wit');
else
    witfile = strcat(exp_filename,num2str(cnt_list),'_points.wit');
end
G = [];
M = dlmread(witfile);
g_i = 1;
g_j = 1;
i = 1;
while i < length(M)
    G(g_i,g_j) = M(i);
    i = i+1;
    g_j = g_j + 1;
    G(g_i,g_j) = M(i);
    g_j=1;
    i = i+1;
    g_i = g_i+1;
end

x_diff = G(1,1) - 0.0;
y_diff = G(1,2) - 0.0;

% shifting left point to origin
for i=1:length(G(:,1))
    G(i,1) = G(i,1) - x_diff;
    G(i,2) = G(i,2) - y_diff;
    i=i+1;
end
G1 = sortrows(G,1);
j=1;
for i=1:length(G1(:,1))
    if G1(i,2) == 0
        val(j) = G1(i,1); 
        j=j+1;
    end
end
val_max = val(1);
val_min = val(1);
for k=2:j-1
    if val(k)>val_max
        val_max = val(k) ;
    end
    if val(k)<val_min
        val_min = val(k); 
    end
end
span_exp = val_max-val_min;

%     READ EVOLVER MIDPLANE CURVE
curve_file_name=strcat('curve_case',num2str(case_num),'_inc',num2str(incli),'_', 
num2str(rec_angle),'_',num2str(adv_angle),'.off');
evol = read_evolver_curve(curve_file_name);
j=1;
for i=1:length(evol(:,1))
    if evol(i,2) == 0
        val(j) = evol(i,1); 
        j=j+1;
    end
end
val_max = val(1);
val_min = val(1);
for k=2:j-1
    if val(k)>val_max
        val_max = val(k); 
    end

    if val(k)<val_min
        val_min = val(k);
    end
end
span_evol = val_max-val_min;
for i=1:length(evol(:,1))
    evol(i,1) = evol(i,1)-val_min; 
end
evol=sortrows(evol,1);
scale_factor = span_evol/span_exp;
G2 = G1.*scale_factor;

%     PLOT EXPERIMENTAL AND NUMERICAL DROP PROFILES 
Handle = plot(evol(:,1)*1000,-evol(:,2)*1000,'LineWidth',4);
axis equal;
xmin = 1000*min(evol(:,1));
xmax = 1000*max(evol(:,1));
ymin = -1000*max(evol(:,2));
ymax = -1000*min(evol(:,2));
hold on
axis([xmin xmax 1.2*ymin ymax]);
plot(G2(1:4:end,1)*1000,-G2(1:4:end,2)*1000,'^k','MarkerSize',12,'LineWidth',2);
set(gca,'FontSize',20); 
filename_tif=strcat('comparison_case',num2str(case_num),'_',num2str(cnt_list),'.tif');
saveas(Handle,filename_tif);
hold off;
close all;

%     COPY RELEVANT EVOLVER 3D FILES FROM CASES_FOLDER 
filename_num=strcat('num_case',num2str(case_num),'_inc',num2str(incli), '_',num2str(rec_angle),'_',num2str(adv_angle),'.off');
tmp_str=strcat('cp ../../cases_folder/case',num2str(case_num),'/',filename_num, ' ./');
unix(tmp_str);
outfile_3d = strcat('case',num2str(case_num),'_',num2str(cnt_list),'.tif');
dlmwrite('tfilname.txt',filename_num,'');
dlmwrite('toutfile.txt',outfile_3d,'');
unix('bash script_tec_report_plots.sh');    % THIS SCRIPT CALLS TECPLOT TO EXTRACT DROP BASE CONTOURS AND SHAPES
end

% CROP THE DROP SHAPE
% GET DROP DIA OF THE DROP WITH MAX INCLINATION
cnt_list=cnt_list_max;
[x1,x2,y1,y3] = drop_points_extract(strcat('drop_3d_case',num2str(case_num),'_',num2str(cnt_list),'.tif'));
max_dia=x2-x1;

% GET DROP HEIGHT OF THE DROP WITH ZERO INCLINATION
cnt_list=1;
[x1,x2,y1,y3] = drop_points_extract(strcat('drop_3d_case',num2str(case_num),'_',num2str(cnt_list),'.tif'));
max_height=y3-y1;
x_offset=20;    % x offset of receding point from right (in pixels)
y_offset=20;    % y offset of receding point from top (in pixels)
W = max_dia+x_offset*2;   % width of the cropped image
H = max_height+y_offset*2;   % height of the cropped image
for cnt_list=1:cnt_list_max
img=imread(strcat('drop_3d_case',num2str(case_num),'_',num2str(cnt_list),'.tif'));
[x1,x2,y1,y3] = drop_points_extract(strcat('drop_3d_case',num2str(case_num),'_',num2str(cnt_list),'.tif'));
rect(1) = x2+x_offset-W;
rect(2) = y1-y_offset;
rect(3) = W;
rect(4) = H;
crop_img=imcrop(img,rect);
imwrite(crop_img,strcat('drop_3d_cropped_case',num2str(case_num),'_',num2str(cnt_list),'.jpg'),'jpg');
end
unix('rm drop_3d_case*.tif');

% CROP THE BASE CONTOUR
% GET BASE CONTOUR MAX DIMENSIONS FOR THE CASE OF MAX INCLINATION
cnt_list=cnt_list_max;
[x_left,x_right,y_top,y_bot] = bc_points_extract(strcat('bc_case',num2str(case_num),'_',num2str(cnt_list),'.tif'));
max_x_span=x_right-x_left;
max_y_span=y_bot-y_top;
x_offset=20;    
y_offset=30;    
W = max_x_span+x_offset*2;
H = max_y_span+y_offset*2;
for cnt_list=1:cnt_list_max
img=imread(strcat('bc_case',num2str(case_num),'_',num2str(cnt_list),'.tif'));
[x_left,x_right,y_top,y_bot] = bc_points_extract(strcat('bc_case',num2str(case_num),'_',num2str(cnt_list),'.tif'));
rect(1) = x_left-(W-(x_right-x_left))/2;
rect(2) = y_top-(H-(y_bot-y_top))/2;
rect(3) = W;
rect(4) = H;
crop_img=imcrop(img,rect);
imwrite(crop_img,strcat('bc_cropped_case',num2str(case_num),'_',num2str(cnt_list),'.jpg'),'jpg');
end
unix('rm bc_case*.tif');

% CROP THE DROP PROFILE PLOT
for cnt_list=1:cnt_list_max
img=imread(strcat('comparison_case',num2str(case_num),'_',num2str(cnt_list),'.tif'));
size_img=size(img);
H=size_img(1)*0.8;
W=size_img(2);
rect(1) = 1;
rect(2) = 1 + 0.1*size_img(1);
rect(3) = W;
rect(4) = H;
crop_img=imcrop(img,rect);
imwrite(crop_img,strcat('comparison_cropped_case_',num2str(case_num),'_',num2str(cnt_list), '.jpg'),'jpg');
end
unix('rm comparison_case*.tif');
exit;